git clone https://github.com/Web4application/fadaka.git
cd fadaka

git checkout -b renovate/fix-typechain-range

git clone https://github.com/eveem-org/panoramix.git
pip3 install -r requirements.txt
 pip install streamlit pandas

# Build (native arch)
 docker build -t fadaka:latest .

# Build cross‑arch (e.g., arm64):
 docker buildx build --platform linux/arm64 -t fadaka:arm64 .

# Run
 docker run -it --rm \
  -p 30303:30303 -p 8545:8545 \
  fadaka:latest

cd rodaai-backend
uvicorn app.main:app --host 0.0.0.0 --port 7000
# In a separate terminal, start local blockchain node
 npx hardhat node
 npx hardhat run scripts/deploy.js --network localhost

# Deploy contract to local node
npx hardhat run scripts/deploy.js --network localhost
npm run prepare
 npm install --save-dev hardhat @nomicfoundation/hardhat-toolbox dotenv
 npm install @openzeppelin/contracts-upgradeable @openzeppelin/hardhat-upgrades
 npm install husky eslint jest --save-dev
 npx hardhat
 npx hardhat compile
 npx hardhat run scripts/deploy-v2.js --network fadakaTestnet
 npx hardhat run scripts/deploy-fadaka-upgradeable.js --network fadakaTestnet
 npx husky install
 npx husky add .husky/pre-commit "npm run lint"
 npx husky add .husky/pre-push "npm test"
 npx hardhat node
 npx hardhat compile
# Choose: "Create a JavaScript project"

 npm install eslint jest --save-dev
 cd backend
 npm install
cd frontend
npm install

 npm install --save-dev hardhat @nomicfoundation/hardhat-toolbox dotenv
artifacts/contracts/MyContract.sol/MyContract.json
 npm init -y
 npm install --save-dev hardhat
 npm install husky --save-dev

 go install mvdan.cc/gofumpt@v0.4.0
 go install honnef.co/go/tools/cmd/staticcheck@v0.4.2
 go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.60.3
 go install go.uber.org/nilaway/cmd/nilaway@latest
 go install github.com/daixiang0/gci@v0.11.2

 npx hardhat verify --network fadakaTestnet YOUR_PROXY_ADDRESS
const upgraded = await upgrades.upgradeProxy(proxyAddress, FadakaTokenV2);

 npx hardhat run scripts/deploy-v2.js --network fadakaTestnet

 npx hardhat verify --network fadakaTestnet YOUR_PROXY_ADDRESS

 git clone https://github.com/Web4application/fadakacoin.git
 cd fadakacoin/backend && npm install
 cd ../frontend && npm install

# Set up .env
FADAKA_TESTNET_RPC=https://rpc.fadaka.io
FADAKA_PRIVATE_KEY=your_wallet_private_key
FADAKA_EXPLORER_API_KEY=optional_api_key

# Then run:
 npx hardhat compile
 npx hardhat run scripts/deploy-v2.js --network fadakaTestnet

./btfs init
./btfs daemon

# 1) Build/pull images (build locally if not yet pushed)
 docker compose build        # or docker compose pull
# 2) Launch everything
 docker compose up -d
# 3) Observe logs
 docker compose logs -f node

 curl -L https://foundry.paradigm.xyz | bash
 cargo install --git https://github.com/foundry-rs/foundry --profile release --locked forge cast chisel anvil

# clone the repository
 git clone https://github.com/foundry-rs/foundry.git
 cd foundry
# install Forge
 cargo install --path ./crates/forge --profile release --force --locked
# install Cast
 cargo install --path ./crates/cast --profile release --force --locked
# install Anvil
 cargo install --path ./crates/anvil --profile release --force --locked
# install Chisel
 cargo install --path ./crates/chisel --profile release --force --locked

 wget https://dist.ipfs.tech/kubo/v0.35.0/kubo_v0.35.0_linux-amd64.tar.gz
tar -xvzf kubo_v0.35.0_linux-amd64.tar.gz
cd kubo
./install.sh
ipfs init
ipfs daemon

 git clone https://github.com/eveem-org/panoramix.git
 pip3 install -r requirements.txt

# Fetch Postgres dependency
 helm dependency update fadaka-chart/

# Dry‑run install
 helm install fadaka fadaka-chart/ --namespace fadaka --create-namespace --dry-run

# Real install
 helm install fadaka fadaka-chart/ --namespace fadaka --create-namespace

 git clone https://github.com/Web4application/fadakacoin.git
 cd fadakacoin

git clone https://github.com/ethereum/go-ethereum.git
cd go-ethereum

go install golang.org/dl/go1.23@latest
go1.23 download
go1.23 env

go build -o build/bin/geth ./cmd/geth

./build/bin/geth --http --dev --datadir "./data"

go get -u ./...

go vet ./...
staticcheck ./...
go test ./...

go build -ldflags="-s -w" -o build/geth ./cmd/geth

GOFLAGS="-ldflags=-linkmode=external -extldflags=-O2" go build ...

docker build -t geth-local .
docker run -p 5000:5000 geth-local --http:localhost:8000

# Go to the project root
cd fadaka_proxy_deployment/contracts

# Rename the file to remove the trailing space
git mv "ipfs_addr.h " "ipfs_addr.h"
git commit -m "Fix: Removed trailing space in filename"
git push

git rm --cached "fadaka_proxy_deployment/contracts/ipfs_addr.h "
git commit -m "Remove invalid file with trailing space"
git push

rm pnpm-lock.yaml node_modules -rf

pnpm install

git apply fix-typechain-version.patch

go install github.com/ethereum/go-ethereum/cmd/abigen@latest

go run assembly/cli.go decode 0x6080604052348015600f57600080fd5b

forge test --match-path tests/Quest.t.sol

go run cmd/fadaka_keys.go generate
go run cmd/fadaka_keys.go sign fadaka_private.pem tx.json
go run cmd/fadaka_keys.go verify fadaka_public.pem signed_tx.json

cd contracts/hello
make build

go run vm/runner.go

fadaka-cli deploy SovereignIdentity --upgradeable
fadaka-cli deploy DAOModerator --trust-gated
fadaka-cli deploy QuestEngine --agent Web4Node
fadaka-cli deploy VaultTreasury --strategy AI

go build -o fadaka ./cmd/fadaka
./fadaka start
go mod tidy
git clone https://github.com/Web4application/fadakacoin.git
cd fadakacoin

git clone https://github.com/Web4application/fadaka.git
cd fadaka

mkdir web4app-fadaka && cd web4app-fadaka
mkdir assets
---

```bash
fadaka/
├── index.html
├── wallet.html
├── dapp.html
├── network.html
├── settings.html
├── contracts.html
├── about.html
├── config.js
├── .env.development
├── .env.production
├── favicon.ico
└── assets/
    ├── style.css
    └── app.js

    cd your-fadaka-repo
unzip ../fadaka-typechain-setup.zip
cd contracts && rm Example.sol && rm -rf test # if you already have them
cd ../ # back to root
npm install

git clone https://github.com/Web4application/fadaka.git
cd fadaka
git checkout -b renovate/fix-typechain-range

 pip install streamlit pandas

# Build (native arch)
 docker build -t fadaka:latest .

# Build cross‑arch (e.g., arm64):
 docker buildx build --platform linux/arm64 -t fadaka:arm64 .

# Run
 docker run -it --rm \
  -p 30303:30303 -p 8545:8545 \
  fadaka:latest

cd rodaai-backend
uvicorn app.main:app --host 0.0.0.0 --port 7000
# In a separate terminal, start local blockchain node
 npx hardhat node
 npx hardhat run scripts/deploy.js --network localhost

# Deploy contract to local node
npx hardhat run scripts/deploy.js --network localhost
npm run prepare
 npm install --save-dev hardhat @nomicfoundation/hardhat-toolbox dotenv
 npm install @openzeppelin/contracts-upgradeable @openzeppelin/hardhat-upgrades
 npm install husky eslint jest --save-dev
 npx hardhat
 npx hardhat compile
 npx hardhat run scripts/deploy-v2.js --network fadakaTestnet
 npx hardhat run scripts/deploy-fadaka-upgradeable.js --network fadakaTestnet
 npx husky install
 npx husky add .husky/pre-commit "npm run lint"
 npx husky add .husky/pre-push "npm test"
 npx hardhat node
 npx hardhat compile
# Choose: "Create a JavaScript project"

 npm install eslint jest --save-dev
 cd backend
 npm install
cd frontend
npm install

 npm install --save-dev hardhat @nomicfoundation/hardhat-toolbox dotenv
artifacts/contracts/MyContract.sol/MyContract.json
 npm init -y
 npm install --save-dev hardhat
 npm install husky --save-dev

 go install mvdan.cc/gofumpt@v0.4.0
 go install honnef.co/go/tools/cmd/staticcheck@v0.4.2
 go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.60.3
 go install go.uber.org/nilaway/cmd/nilaway@latest
 go install github.com/daixiang0/gci@v0.11.2

 npx hardhat verify --network fadakaTestnet YOUR_PROXY_ADDRESS
const upgraded = await upgrades.upgradeProxy(proxyAddress, FadakaTokenV2);

 npx hardhat run scripts/deploy-v2.js --network fadakaTestnet

 npx hardhat verify --network fadakaTestnet YOUR_PROXY_ADDRESS

 git clone https://github.com/Web4application/fadakacoin.git
 cd fadakacoin/backend && npm install
 cd ../frontend && npm install

# Set up .env
FADAKA_TESTNET_RPC=https://rpc.fadaka.io
FADAKA_PRIVATE_KEY=your_wallet_private_key
FADAKA_EXPLORER_API_KEY=optional_api_key

# Then run:
 npx hardhat compile
 npx hardhat run scripts/deploy-v2.js --network fadakaTestnet

./btfs init
./btfs daemon

# 1) Build/pull images (build locally if not yet pushed)
 docker compose build        # or docker compose pull
# 2) Launch everything
 docker compose up -d
# 3) Observe logs
 docker compose logs -f node

 curl -L https://foundry.paradigm.xyz | bash
 cargo install --git https://github.com/foundry-rs/foundry --profile release --locked forge cast chisel anvil

# clone the repository
 git clone https://github.com/foundry-rs/foundry.git
 cd foundry
# install Forge
 cargo install --path ./crates/forge --profile release --force --locked
# install Cast
 cargo install --path ./crates/cast --profile release --force --locked
# install Anvil
 cargo install --path ./crates/anvil --profile release --force --locked
# install Chisel
 cargo install --path ./crates/chisel --profile release --force --locked

 wget https://dist.ipfs.tech/kubo/v0.35.0/kubo_v0.35.0_linux-amd64.tar.gz
tar -xvzf kubo_v0.35.0_linux-amd64.tar.gz
cd kubo
./install.sh
ipfs init
ipfs daemon

 git clone https://github.com/eveem-org/panoramix.git
 pip3 install -r requirements.txt

# Fetch Postgres dependency
 helm dependency update fadaka-chart/

# Dry‑run install
 helm install fadaka fadaka-chart/ --namespace fadaka --create-namespace --dry-run

# Real install
 helm install fadaka fadaka-chart/ --namespace fadaka --create-namespace

 git clone https://github.com/Web4application/fadakacoin.git
 cd fadakacoin

git clone https://github.com/ethereum/go-ethereum.git
cd go-ethereum

go install golang.org/dl/go1.23@latest
go1.23 download
go1.23 env

go build -o build/bin/geth ./cmd/geth

./build/bin/geth --http --dev --datadir "./data"

go get -u ./...

go vet ./...
staticcheck ./...
go test ./...

go build -ldflags="-s -w" -o build/geth ./cmd/geth

GOFLAGS="-ldflags=-linkmode=external -extldflags=-O2" go build ...

docker build -t geth-local .
docker run -p 5000:5000 geth-local --http:localhost:8000

# Go to the project root
cd fadaka_proxy_deployment/contracts

# Rename the file to remove the trailing space
git mv "ipfs_addr.h " "ipfs_addr.h"
git commit -m "Fix: Removed trailing space in filename"
git push

git rm --cached "fadaka_proxy_deployment/contracts/ipfs_addr.h "
git commit -m "Remove invalid file with trailing space"
git push

rm pnpm-lock.yaml node_modules -rf

pnpm install

git apply fix-typechain-version.patch

go install github.com/ethereum/go-ethereum/cmd/abigen@latest

go run assembly/cli.go decode 0x6080604052348015600f57600080fd5b

forge test --match-path tests/Quest.t.sol

go run cmd/fadaka_keys.go generate
go run cmd/fadaka_keys.go sign fadaka_private.pem tx.json
go run cmd/fadaka_keys.go verify fadaka_public.pem signed_tx.json

cd contracts/hello
make build

go run vm/runner.go

fadaka-cli deploy SovereignIdentity --upgradeable
fadaka-cli deploy DAOModerator --trust-gated
fadaka-cli deploy QuestEngine --agent Web4Node
fadaka-cli deploy VaultTreasury --strategy AI

go build -o fadaka ./cmd/fadaka
./fadaka start

```
go mod tidy
git clone https://github.com/Web4application/fadakacoin.git
cd fadakacoin

git clone https://github.com/Web4application/fadaka.git
cd fadaka

mkdir web4app-fadaka && cd web4app-fadaka
mkdir assets
---
web4app-fadaka/
├── index.html
├── wallet.html
├── dapp.html
├── network.html
├── settings.html
├── contracts.html
├── about.html
├── config.js
├── .env.development
├── .env.production
├── favicon.ico
└── assets/
    ├── style.css
    └── app.js

cd your-fadaka-repo
unzip ../fadaka-typechain-setup.zip
cd contracts && rm Example.sol && rm -rf test # if you already have them
cd ../ # back to root
npm install

http://localhost:7545 panoramix 0x81BA3931816759D3FBb4a98a448A0DfdCd2a89BC
$ pip install panoramix-decompiler
$ WEB3_PROVIDER_URI=http://localhost:7545 panoramix 0x3Ae1F70CF6dA80955936f5599D103fCF62162D10
$ WEB3_PROVIDER_URI=http://localhost:7545 panoramix 0xa0C5F9c82e7A67eb995da394bEa78b056561Eb11
$ panoramix 0x608060405260043610610058575f3560e01c80633f707e6b146101e35780634ed8de18146101ff5780636171d1c9146102155780638feb1b8b14610231578063affed0e014610259578063f436d5c8146102835761011b565b3661011b575f7343b18f8fb488e30d524757d78da1438881d1aaaa73ffffffffffffffffffffffffffffffffffffffff1634604051610096906110a3565b5f6040518083038185875af1925050503d805f81146100d0576040519150601f19603f3d011682016040523d82523d5f602084013e6100d5565b606091505b5050905080610119576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011090611111565b60405180910390fd5b005b5f3411156101e1575f7343b18f8fb488e30d524757d78da1438881d1aaaa73ffffffffffffffffffffffffffffffffffffffff163460405161015c906110a3565b5f6040518083038185875af1925050503d805f8114610196576040519150601f19603f3d011682016040523d82523d5f602084013e61019b565b606091505b50509050806101df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d690611111565b60405180910390fd5b505b005b6101fd60048036038101906101f89190611198565b6102ab565b005b34801561020a575f5ffd5b50610213610327565b005b61022f600480360381019061022a9190611238565b6103f4565b005b34801561023c575f5ffd5b5061025760048036038101906102529190611310565b6105d8565b005b348015610264575f5ffd5b5061026d61088b565b60405161027a9190611353565b60405180910390f35b34801561028e575f5ffd5b506102a960048036038101906102a491906113c1565b610890565b005b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031090611456565b60405180910390fd5b6103238282610b77565b5050565b5f4790505f8111156103f1575f7343b18f8fb488e30d524757d78da1438881d1aaaa73ffffffffffffffffffffffffffffffffffffffff168260405161036c906110a3565b5f6040518083038185875af1925050503d805f81146103a6576040519150601f19603f3d011682016040523d82523d5f602084013e6103ab565b606091505b50509050806103ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e6906114be565b60405180910390fd5b505b50565b60605f5f90505b858590508110156104cc578186868381811061041a576104196114dc565b5b905060200281019061042c9190611515565b5f01602081019061043d9190611310565b8787848181106104505761044f6114dc565b5b90506020028101906104629190611515565b60200135888885818110610479576104786114dc565b5b905060200281019061048b9190611515565b806040019061049a919061153c565b6040516020016104ae95949392919061167d565b604051602081830303815290604052915080806001019150506103fb565b505f5f54826040516020016104e29291906116c4565b6040516020818303038152906040528051906020012090505f61050482610c1c565b90505f6105548287878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050610c4f565b90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb90611735565b60405180910390fd5b6105ce8888610b77565b5050505050505050565b5f306040516024016105ea9190611762565b6040516020818303038152906040527f70a08231000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090505f5f8373ffffffffffffffffffffffffffffffffffffffff1683604051610690919061177b565b5f604051808303815f865af19150503d805f81146106c9576040519150601f19603f3d011682016040523d82523d5f602084013e6106ce565b606091505b509150915081610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070a906117db565b60405180910390fd5b5f818060200190518101906107289190611823565b90505f811115610884575f7343b18f8fb488e30d524757d78da1438881d1aaaa8260405160240161075a92919061184e565b6040516020818303038152906040527fa9059cbb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090505f8673ffffffffffffffffffffffffffffffffffffffff16826040516107ff919061177b565b5f604051808303815f865af19150503d805f8114610838576040519150601f19603f3d011682016040523d82523d5f602084013e61083d565b606091505b5050905080610881576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610878906118bf565b60405180910390fd5b50505b5050505050565b5f5481565b5f5f90505b82829050811015610b72575f306040516024016108b29190611762565b6040516020818303038152906040527f70a08231000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090505f5f858585818110610946576109456114dc565b5b905060200201602081019061095b9190611310565b73ffffffffffffffffffffffffffffffffffffffff168360405161097f919061177b565b5f604051808303815f865af19150503d805f81146109b8576040519150601f19603f3d011682016040523d82523d5f602084013e6109bd565b606091505b50915091508115610b62575f818060200190518101906109dd9190611823565b90505f811115610b60575f7343b18f8fb488e30d524757d78da1438881d1aaaa82604051602401610a0f92919061184e565b6040516020818303038152906040527fa9059cbb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090505f888888818110610aa257610aa16114dc565b5b9050602002016020810190610ab79190611310565b73ffffffffffffffffffffffffffffffffffffffff1682604051610adb919061177b565b5f604051808303815f865af19150503d805f8114610b14576040519150601f19603f3d011682016040523d82523d5f602084013e610b19565b606091505b5050905080610b5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b54906118bf565b60405180910390fd5b50505b505b5050508080600101915050610895565b505050565b5f5f5490505f5f815480929190610b8d9061190a565b91905055505f5f90505b83839050811015610bdc57610bcf848483818110610bb857610bb76114dc565b5b9050602002810190610bca9190611515565b610c79565b8080600101915050610b97565b50807f280bb3599696acbf79fb8ffcde81a57337b52500f789600fbb1cff9b4cbaba398484604051610c0f929190611ba1565b60405180910390a2505050565b5f7f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f5281601c52603c5f209050919050565b5f5f5f5f610c5d8686610dd8565b925092509250610c6d8282610e2d565b82935050505092915050565b5f815f016020810190610c8c9190611310565b73ffffffffffffffffffffffffffffffffffffffff168260200135838060400190610cb7919061153c565b604051610cc5929190611bc3565b5f6040518083038185875af1925050503d805f8114610cff576040519150601f19603f3d011682016040523d82523d5f602084013e610d04565b606091505b5050905080610d48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3f90611c25565b60405180910390fd5b815f016020810190610d5a9190611310565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fed7e8f919df9cc0d0ad8b4057d084ebf319b630564d5da283e14751adc931f3a8460200135858060400190610dbd919061153c565b604051610dcc93929190611c7f565b60405180910390a35050565b5f5f5f6041845103610e18575f5f5f602087015192506040870151915060608701515f1a9050610e0a88828585610f8f565b955095509550505050610e26565b5f600285515f1b9250925092505b9250925092565b5f6003811115610e4057610e3f611caf565b5b826003811115610e5357610e52611caf565b5b0315610f8b5760016003811115610e6d57610e6c611caf565b5b826003811115610e8057610e7f611caf565b5b03610eb7576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115610ecb57610eca611caf565b5b826003811115610ede57610edd611caf565b5b03610f2257805f1c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401610f199190611353565b60405180910390fd5b600380811115610f3557610f34611caf565b5b826003811115610f4857610f47611caf565b5b03610f8a57806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401610f819190611cf4565b60405180910390fd5b5b5050565b5f5f5f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c1115610fcb575f60038592509250925061106c565b5f6001888888886040515f8152602001604052604051610fee9493929190611d28565b6020604051602081039080840390855afa15801561100e573d5f5f3e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361105f575f60015f5f1b9350935093505061106c565b805f5f5f1b935093509350505b9450945094915050565b5f81905092915050565b50565b5f61108e5f83611076565b915061109982611080565b5f82019050919050565b5f6110ad82611083565b9150819050919050565b5f82825260208201905092915050565b7f466f7277617264206661696c65640000000000000000000000000000000000005f82015250565b5f6110fb600e836110b7565b9150611106826110c7565b602082019050919050565b5f6020820190508181035f830152611128816110ef565b9050919050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261115857611157611137565b5b8235905067ffffffffffffffff8111156111755761117461113b565b5b6020830191508360208202830111156111915761119061113f565b5b9250929050565b5f5f602083850312156111ae576111ad61112f565b5b5f83013567ffffffffffffffff8111156111cb576111ca611133565b5b6111d785828601611143565b92509250509250929050565b5f5f83601f8401126111f8576111f7611137565b5b8235905067ffffffffffffffff8111156112155761121461113b565b5b6020830191508360018202830111156112315761123061113f565b5b9250929050565b5f5f5f5f604085870312156112505761124f61112f565b5b5f85013567ffffffffffffffff81111561126d5761126c611133565b5b61127987828801611143565b9450945050602085013567ffffffffffffffff81111561129c5761129b611133565b5b6112a8878288016111e3565b925092505092959194509250565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112df826112b6565b9050919050565b6112ef816112d5565b81146112f9575f5ffd5b50565b5f8135905061130a816112e6565b92915050565b5f602082840312156113255761132461112f565b5b5f611332848285016112fc565b91505092915050565b5f819050919050565b61134d8161133b565b82525050565b5f6020820190506113665f830184611344565b92915050565b5f5f83601f84011261138157611380611137565b5b8235905067ffffffffffffffff81111561139e5761139d61113b565b5b6020830191508360208202830111156113ba576113b961113f565b5b9250929050565b5f5f602083850312156113d7576113d661112f565b5b5f83013567ffffffffffffffff8111156113f4576113f3611133565b5b6114008582860161136c565b92509250509250929050565b7f496e76616c696420617574686f726974790000000000000000000000000000005f82015250565b5f6114406011836110b7565b915061144b8261140c565b602082019050919050565b5f6020820190508181035f83015261146d81611434565b9050919050565b7f455448207472616e73666572206661696c6564000000000000000000000000005f82015250565b5f6114a86013836110b7565b91506114b382611474565b602082019050919050565b5f6020820190508181035f8301526114d58161149c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f823560016060038336030381126115305761152f611509565b5b80830191505092915050565b5f5f8335600160200384360303811261155857611557611509565b5b80840192508235915067ffffffffffffffff82111561157a5761157961150d565b5b60208301925060018202360383131561159657611595611511565b5b509250929050565b5f81519050919050565b8281835e5f83830152505050565b5f6115c08261159e565b6115ca8185611076565b93506115da8185602086016115a8565b80840191505092915050565b5f8160601b9050919050565b5f6115fc826115e6565b9050919050565b5f61160d826115f2565b9050919050565b611625611620826112d5565b611603565b82525050565b5f819050919050565b6116456116408261133b565b61162b565b82525050565b828183375f83830152505050565b5f6116648385611076565b935061167183858461164b565b82840190509392505050565b5f61168882886115b6565b91506116948287611614565b6014820191506116a48286611634565b6020820191506116b5828486611659565b91508190509695505050505050565b5f6116cf8285611634565b6020820191506116df82846115b6565b91508190509392505050565b7f496e76616c6964207369676e61747572650000000000000000000000000000005f82015250565b5f61171f6011836110b7565b915061172a826116eb565b602082019050919050565b5f6020820190508181035f83015261174c81611713565b9050919050565b61175c816112d5565b82525050565b5f6020820190506117755f830184611753565b92915050565b5f61178682846115b6565b915081905092915050565b7f42616c616e636520636865636b206661696c65640000000000000000000000005f82015250565b5f6117c56014836110b7565b91506117d082611791565b602082019050919050565b5f6020820190508181035f8301526117f2816117b9565b9050919050565b6118028161133b565b811461180c575f5ffd5b50565b5f8151905061181d816117f9565b92915050565b5f602082840312156118385761183761112f565b5b5f6118458482850161180f565b91505092915050565b5f6040820190506118615f830185611753565b61186e6020830184611344565b9392505050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f6118a96015836110b7565b91506118b482611875565b602082019050919050565b5f6020820190508181035f8301526118d68161189d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119148261133b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611946576119456118dd565b5b600182019050919050565b5f82825260208201905092915050565b5f819050919050565b5f61197860208401846112fc565b905092915050565b611989816112d5565b82525050565b5f8135905061199d816117f9565b92915050565b5f6119b1602084018461198f565b905092915050565b6119c28161133b565b82525050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f833560016020038436030381126119f0576119ef6119d0565b5b83810192508235915060208301925067ffffffffffffffff821115611a1857611a176119c8565b5b600182023603831315611a2e57611a2d6119cc565b5b509250929050565b5f82825260208201905092915050565b5f601f19601f8301169050919050565b5f611a618385611a36565b9350611a6e83858461164b565b611a7783611a46565b840190509392505050565b5f60608301611a935f84018461196a565b611a9f5f860182611980565b50611aad60208401846119a3565b611aba60208601826119b9565b50611ac860408401846119d4565b8583036040870152611adb838284611a56565b925050508091505092915050565b5f611af48383611a82565b905092915050565b5f82356001606003833603038112611b1757611b166119d0565b5b82810191505092915050565b5f602082019050919050565b5f611b3a8385611951565b935083602084028501611b4c84611961565b805f5b87811015611b8f578484038952611b668284611afc565b611b708582611ae9565b9450611b7b83611b23565b925060208a01995050600181019050611b4f565b50829750879450505050509392505050565b5f6020820190508181035f830152611bba818486611b2f565b90509392505050565b5f611bcf828486611659565b91508190509392505050565b7f43616c6c207265766572746564000000000000000000000000000000000000005f82015250565b5f611c0f600d836110b7565b9150611c1a82611bdb565b602082019050919050565b5f6020820190508181035f830152611c3c81611c03565b9050919050565b5f82825260208201905092915050565b5f611c5e8385611c43565b9350611c6b83858461164b565b611c7483611a46565b840190509392505050565b5f604082019050611c925f830186611344565b8181036020830152611ca5818486611c53565b9050949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f819050919050565b611cee81611cdc565b82525050565b5f602082019050611d075f830184611ce5565b92915050565b5f60ff82169050919050565b611d2281611d0d565b82525050565b5f608082019050611d3b5f830187611ce5565b611d486020830186611d19565b611d556040830185611ce5565b611d626060830184611ce5565b9594505050505056fea2646970667358221220029b362bf75505f9220150e9bda0182a2f851057fc137bc2c6eba3043c34636064736f6c634300081e0033
